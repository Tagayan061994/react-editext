{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_assertThisInitialized","self","ReferenceError","styles","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","styleInject","classnames","fn","module","exports","createCommonjsModule","hasOwn","classNames","classes","arg","argType","push","Array","isArray","inner","join","default","window","_Component","EdiText","_this","instance","Constructor","TypeError","_classCallCheck","e","setState","valid","editing","state","savedValue","onCancel","_this$props","onSave","validation","onValidationFail","_this$props2","saveButtonClassName","saveButtonContent","cancelButtonClassName","editContainerClassName","viewContainerClassName","cancelButtonContent","validationMessage","hint","hideIcons","buttonsAlign","inputElem","_renderInput","saveButtonDefaultClasses","concat","Editext__button","Editext__save_button","Editext__hide_default_icons","saveButtonClass","cancelButtonDefaultClasses","Editext__cancel_button","cancelButtonClass","editContainerClass","Editext__editing_container","buttonsContainerClass","Editext__buttons_container","Editext__buttons_before_aligned","Editext__buttons_after_aligned","className","saveButton","onClick","_onSave","cancelButton","_onCancel","Editext__validation_message","Editext__hint","_this$props3","viewProps","editButtonClassName","editButtonContent","editOnViewClick","editButtonDefaultClasses","Editext__edit_button","editButtonClass","viewContainerClass","Editext__view_container","viewClickHandler","_activateEditMode","undefined","editButton","createRef","input","protoProps","staticProps","subClass","superClass","create","constructor","_inherits","nextProps","nextState","keys","Editext__input","inputProps","onChange","_onInputChange","autoFocus","mode","_renderEditingMode","_renderViewMode","mainContainerClass","mainContainerClassName","Editext__main_container","defaultProps","propTypes","object","string","isRequired","node","func","oneOf","any","bool","App","val","console","log","validationFailed","textValue","alert","marginRight","href","data-size","data-show-count","aria-label","id","language","placeholder","outline","minWidth","rows","backgroundColor","color","fontWeight","width","name","borderRadius","toLowerCase","indexOf","min","max","Date","toLocaleString","padding","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.11d16fa9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".styles_Editext__button__6H8n_ {\\n  border-radius: 1px;\\n  outline: none;\\n  padding: 0.6em;\\n  min-width: 30px;\\n  height: 100%;\\n  border-color: rgb(216, 216, 216) rgb(209, 209, 209) rgb(186, 186, 186);\\n  border-style: solid;\\n  border-width: 1px;\\n}\\n.styles_Editext__button__6H8n_:hover {\\n  cursor: pointer;\\n  background-color: rgba(241, 241, 241, 1.00)\\n}\\n.styles_Editext__input__1534X {\\n  width: 100%;\\n  border: 1px solid rgb(212, 212, 212);\\n  padding: 0.6em;\\n  outline: none;\\n}\\n.styles_Editext__main_container__2Y-IL {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.styles_Editext__editing_container__3yvUv {\\n  display: flex;\\n  flex: 1;\\n  align-items: center;\\n}\\n.styles_Editext__view_container__2l2kB {\\n  display: flex;\\n  align-items: center;\\n}\\n.styles_Editext__buttons_container__1kphL {\\n  display: flex;\\n}\\n.styles_Editext__buttons_before_aligned__NnoWq {\\n  margin-right: 5px;\\n}\\n.styles_Editext__buttons_after_aligned__1nlcG {\\n  margin-left: 5px;\\n}\\n.styles_Editext__validation_message__3B-OU {\\n  font-weight: 500;\\n  color: crimson;\\n  font-size: .7em;\\n  margin-top: 3px;\\n}\\n.styles_Editext__cancel_button__259hb {\\n  color: crimson;\\n}\\n.styles_Editext__cancel_button__259hb:before {\\n  content: '\\\\2715';\\n  margin: 3px;\\n}\\n.styles_Editext__edit_button__hthOZ {\\n  color: #000;\\n}\\n.styles_Editext__edit_button__hthOZ:before {\\n  content: '\\\\270E';\\n  margin: 3px;\\n}\\n.styles_Editext__save_button__3WN6q {\\n  color: darkgreen;\\n  margin-right: 3px;\\n}\\n.styles_Editext__save_button__3WN6q:before {\\n  content: '\\\\2713';\\n  margin: 3px;\\n}\\n.styles_Editext__hide_default_icons__AV_7m:before {\\n  content: none;\\n  margin: 0;\\n}\\n.styles_Editext__hint__2QU2S {\\n  font-weight: 500;\\n  color: lightslategray;\\n  font-size: .7em;\\n  margin-top: 3px;\\n  text-align: left;\\n}\\n\";\nvar styles = {\n  \"Editext__button\": \"styles_Editext__button__6H8n_\",\n  \"Editext__input\": \"styles_Editext__input__1534X\",\n  \"Editext__main_container\": \"styles_Editext__main_container__2Y-IL\",\n  \"Editext__editing_container\": \"styles_Editext__editing_container__3yvUv\",\n  \"Editext__view_container\": \"styles_Editext__view_container__2l2kB\",\n  \"Editext__buttons_container\": \"styles_Editext__buttons_container__1kphL\",\n  \"Editext__buttons_before_aligned\": \"styles_Editext__buttons_before_aligned__NnoWq\",\n  \"Editext__buttons_after_aligned\": \"styles_Editext__buttons_after_aligned__1nlcG\",\n  \"Editext__validation_message\": \"styles_Editext__validation_message__3B-OU\",\n  \"Editext__cancel_button\": \"styles_Editext__cancel_button__259hb\",\n  \"Editext__edit_button\": \"styles_Editext__edit_button__hthOZ\",\n  \"Editext__save_button\": \"styles_Editext__save_button__3WN6q\",\n  \"Editext__hide_default_icons\": \"styles_Editext__hide_default_icons__AV_7m\",\n  \"Editext__hint\": \"styles_Editext__hint__2QU2S\"\n};\nstyleInject(css);\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar classnames = createCommonjsModule(function (module) {\n  /*!\n    Copyright (c) 2017 Jed Watson.\n    Licensed under the MIT License (MIT), see\n    http://jedwatson.github.io/classnames\n  */\n\n  /* global define */\n  (function () {\n    var hasOwn = {}.hasOwnProperty;\n\n    function classNames() {\n      var classes = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (!arg) continue;\n        var argType = typeof arg;\n\n        if (argType === 'string' || argType === 'number') {\n          classes.push(arg);\n        } else if (Array.isArray(arg) && arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        } else if (argType === 'object') {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        }\n      }\n\n      return classes.join(' ');\n    }\n\n    if (module.exports) {\n      classNames.default = classNames;\n      module.exports = classNames;\n    } else {\n      window.classNames = classNames;\n    }\n  })();\n});\n\nvar EdiText =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EdiText, _Component);\n\n  function EdiText(props) {\n    var _this;\n\n    _classCallCheck(this, EdiText);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EdiText).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onInputChange\", function (e) {\n      _this.setState({\n        valid: true,\n        value: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onCancel\", function () {\n      _this.setState({\n        valid: true,\n        editing: false,\n        value: _this.state.savedValue || _this.props.value\n      }, function () {\n        return _this.props.onCancel(_this.state.value);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_activateEditMode\", function () {\n      _this.setState({\n        editing: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSave\", function () {\n      var _this$props = _this.props,\n          onSave = _this$props.onSave,\n          validation = _this$props.validation,\n          onValidationFail = _this$props.onValidationFail;\n      var isValid = validation(_this.state.value);\n\n      if (!isValid) {\n        return _this.setState({\n          valid: false\n        }, function () {\n          onValidationFail && onValidationFail(_this.state.value);\n        });\n      }\n\n      _this.setState({\n        editing: false,\n        savedValue: _this.state.value\n      }, function () {\n        return onSave(_this.state.savedValue);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderEditingMode\", function () {\n      var _this$props2 = _this.props,\n          saveButtonClassName = _this$props2.saveButtonClassName,\n          saveButtonContent = _this$props2.saveButtonContent,\n          cancelButtonClassName = _this$props2.cancelButtonClassName,\n          editContainerClassName = _this$props2.editContainerClassName,\n          viewContainerClassName = _this$props2.viewContainerClassName,\n          cancelButtonContent = _this$props2.cancelButtonContent,\n          onValidationFail = _this$props2.onValidationFail,\n          validationMessage = _this$props2.validationMessage,\n          hint = _this$props2.hint,\n          hideIcons = _this$props2.hideIcons,\n          buttonsAlign = _this$props2.buttonsAlign;\n\n      var inputElem = _this._renderInput(); // calculate save button classes\n\n\n      var saveButtonDefaultClasses = classnames(\"\".concat(styles.Editext__button), \"\".concat(styles.Editext__save_button), hideIcons && \"\".concat(styles.Editext__hide_default_icons));\n      var saveButtonClass = saveButtonClassName || saveButtonDefaultClasses; // calculate cancel button classes\n\n      var cancelButtonDefaultClasses = classnames(\"\".concat(styles.Editext__button), \"\".concat(styles.Editext__cancel_button), hideIcons && \"\".concat(styles.Editext__hide_default_icons));\n      var cancelButtonClass = cancelButtonClassName || cancelButtonDefaultClasses;\n      var editContainerClass = styles.Editext__editing_container;\n      if (editContainerClassName) editContainerClass = editContainerClassName;\n      if (viewContainerClassName) editContainerClass = viewContainerClassName;\n      var buttonsContainerClass = classnames(styles.Editext__buttons_container, buttonsAlign === 'before' && \"\".concat(styles.Editext__buttons_before_aligned), buttonsAlign === 'after' && \"\".concat(styles.Editext__buttons_after_aligned));\n      return React.createElement(\"div\", null, React.createElement(\"div\", {\n        className: editContainerClass\n      }, buttonsAlign === 'after' && inputElem, React.createElement(\"div\", {\n        className: buttonsContainerClass\n      }, React.createElement(\"button\", {\n        ref: _this.saveButton,\n        type: \"button\",\n        className: saveButtonClass,\n        onClick: _this._onSave\n      }, saveButtonContent), React.createElement(\"button\", {\n        ref: _this.cancelButton,\n        type: \"button\",\n        className: cancelButtonClass,\n        onClick: _this._onCancel\n      }, cancelButtonContent)), buttonsAlign === 'before' && inputElem), !_this.state.valid && !onValidationFail && React.createElement(\"div\", {\n        className: styles.Editext__validation_message\n      }, validationMessage), hint && React.createElement(\"div\", {\n        className: styles.Editext__hint\n      }, hint));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderViewMode\", function () {\n      var _this$props3 = _this.props,\n          viewProps = _this$props3.viewProps,\n          editButtonClassName = _this$props3.editButtonClassName,\n          editButtonContent = _this$props3.editButtonContent,\n          viewContainerClassName = _this$props3.viewContainerClassName,\n          hideIcons = _this$props3.hideIcons,\n          buttonsAlign = _this$props3.buttonsAlign,\n          editOnViewClick = _this$props3.editOnViewClick; // calculate edit button classes\n\n      var editButtonDefaultClasses = classnames(\"\".concat(styles.Editext__button), \"\".concat(styles.Editext__edit_button), hideIcons && \"\".concat(styles.Editext__hide_default_icons));\n      var editButtonClass = editButtonClassName || editButtonDefaultClasses;\n      var viewContainerClass = viewContainerClassName || styles.Editext__view_container;\n      var buttonsContainerClass = classnames(styles.Editext__buttons_container, buttonsAlign === 'before' && \"\".concat(styles.Editext__buttons_before_aligned), buttonsAlign === 'after' && \"\".concat(styles.Editext__buttons_after_aligned));\n      var viewClickHandler = editOnViewClick ? _this._activateEditMode : undefined;\n      return React.createElement(\"div\", {\n        className: viewContainerClass\n      }, buttonsAlign === 'after' && React.createElement(\"div\", _extends({}, viewProps, {\n        onClick: viewClickHandler\n      }), _this.state.value), React.createElement(\"div\", {\n        className: buttonsContainerClass\n      }, React.createElement(\"button\", {\n        ref: _this.editButton,\n        type: \"button\",\n        className: editButtonClass,\n        onClick: _this._activateEditMode\n      }, editButtonContent)), buttonsAlign === 'before' && React.createElement(\"div\", _extends({}, viewProps, {\n        onClick: viewClickHandler\n      }), _this.state.value));\n    });\n\n    _this.state = {\n      editing: props.editing,\n      valid: true,\n      value: props.value || '',\n      savedValue: ''\n    };\n    _this.editButton = React.createRef();\n    _this.saveButton = React.createRef();\n    _this.cancelButton = React.createRef();\n    _this.input = React.createRef();\n    return _this;\n  }\n\n  _createClass(EdiText, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var nextState = {};\n\n      if (nextProps.value !== undefined && nextProps.value !== this.state.value) {\n        nextState.value = nextProps.value;\n      }\n\n      if (nextProps.editing !== undefined && nextProps.editing !== this.props.editing) {\n        nextState.editing = nextProps.editing;\n      }\n\n      if (Object.keys(nextState).length > 0) {\n        this.setState(nextState);\n      }\n    }\n  }, {\n    key: \"_renderInput\",\n    value: function _renderInput() {\n      if (this.props.type === 'textarea') {\n        return React.createElement(\"textarea\", _extends({\n          ref: this.input,\n          className: styles.Editext__input\n        }, this.props.inputProps, {\n          value: this.state.value,\n          onChange: this._onInputChange,\n          autoFocus: this.state.editing\n        }));\n      } else {\n        return React.createElement(\"input\", _extends({\n          ref: this.input,\n          className: styles.Editext__input\n        }, this.props.inputProps, {\n          value: this.state.value,\n          type: this.props.type,\n          onChange: this._onInputChange,\n          autoFocus: this.state.editing\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mode = this.state.editing ? this._renderEditingMode() : this._renderViewMode();\n      var mainContainerClass = this.props.mainContainerClassName || styles.Editext__main_container;\n      return React.createElement(\"div\", {\n        className: mainContainerClass\n      }, mode);\n    }\n  }]);\n\n  return EdiText;\n}(Component);\n\nEdiText.defaultProps = {\n  value: '',\n  type: 'text',\n  validationMessage: 'Invalid Value',\n  validation: function validation(value) {\n    return true;\n  },\n  onCancel: function onCancel() {},\n  cancelButtonContent: '',\n  saveButtonContent: '',\n  editButtonContent: '',\n  hideIcons: false,\n  buttonsAlign: 'after',\n  editing: false\n};\nEdiText.propTypes = {\n  inputProps: PropTypes.object,\n  viewProps: PropTypes.object,\n  value: PropTypes.string.isRequired,\n  hint: PropTypes.node,\n  validationMessage: PropTypes.node,\n  validation: PropTypes.func,\n  onValidationFail: PropTypes.func,\n  type: PropTypes.oneOf(['text', 'textarea', 'email', 'number', 'date', 'datetime-local', 'time', 'month', 'url', 'week', 'tel']).isRequired,\n  // Events\n  onCancel: PropTypes.func,\n  onSave: PropTypes.func.isRequired,\n  // classNames\n  saveButtonClassName: PropTypes.string,\n  editButtonClassName: PropTypes.string,\n  cancelButtonClassName: PropTypes.string,\n  mainContainerClassName: PropTypes.string,\n  editContainerClassName: PropTypes.string,\n  viewContainerClassName: PropTypes.string,\n  // Custom Button Texts\n  cancelButtonContent: PropTypes.any,\n  saveButtonContent: PropTypes.any,\n  editButtonContent: PropTypes.any,\n  hideIcons: PropTypes.bool,\n  buttonsAlign: PropTypes.oneOf(['after', 'before']),\n  editOnViewClick: PropTypes.bool,\n  editing: PropTypes.bool\n};\nexport default EdiText;","import React, { Component } from 'react'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport EdiText from 'react-editext'\n\nconst example1 = `import React, { Component } from 'react'\nimport EdiText from 'react-editext'\n\nexport default class App extends Component {\n  onSave = val => {\n    console.log('Edited Value -> ', val)\n  }\n\n  render () {\n    return (\n      <EdiText\n        type='text'\n        value='What is real? How do you define real?'\n        onSave={this.onSave}\n      />\n    )\n  }\n}\n`\nconst example2 = `<EdiText\n  type='textarea'\n  inputProps={{\n    className: 'textarea',\n    placeholder: 'Type your content here',\n    style: {\n      outline: 'none',\n      minWidth: 'auto'\n    },\n    rows: 5\n  }}\n  value=\"How do you define real? If you're talking about what you can feel, what you can smell,\\\\\n  what you can taste and see, then real is simply electrical signals interpreted by your brain\"\n  onSave={this.onSave}\n/>\n\n`\nconst example3 = `<EdiText\n  type=\"textarea\"\n  saveButtonContent=\"Apply\"\n  cancelButtonContent={<strong>Cancel</strong>}\n  editButtonContent=\"Edit\"\n  value=\"Why, Mr. Anderson? Why? Why do you persist?\"\n  onSave={this.onSave}\n/>\n`\nconst example4 = `<EdiText\n  type=\"text\"\n  validationMessage=\"Please type at least 20 characters.\"\n  validation={val => val.length >= 20}\n  value=\"The Matrix has you..\"\n  onSave={this.onSave}\n/>`\n\nconst example5 = `export default class App extends Component {\n  onSave = val => {\n    console.log('Edited Value -> ', val)\n  }\n\n  validationFailed = textValue => {\n    alert(\\`The text <\\${textValue}> is not valid.\\nYou shall not use the word SMITH here!!!\\`)\n  }\n\n  render () {\n    return (\n      <EdiText\n        type=\"text\"\n        validation={val => val.toLowerCase().indexOf('smith') < 0}\n        onValidationFail={this.validationFailed}\n        inputProps={{\n          placeholder: \"Don't use the word 'Smith'...\"\n        }}\n        value=\"Why Mr. Anderson? Why? Why? Why?\"\n        onSave={this.onSave}\n      />\n    )\n  }\n}\n`\n\nconst example6 = `<EdiText\n  type=\"text\"\n  viewProps={{\n    className: 'my-react-header',\n    style: { borderRadius: 3 }\n  }}\n  value=\"Hello React!\"\n  onSave={this.onSave}\n/>`\n\nconst example7 = `<EdiText\n  type=\"text\"\n  hint=\"It is from Matrix Revolutions.\"\n  inputProps={{\n    placeholder: 'Type your answer here',\n    style: {\n      backgroundColor: '#233C51',\n      color: '#E6ECF1',\n      fontWeight: 500,\n      width: 250\n    },\n    name: 'answer1'\n  }}\n  viewProps={{\n    className: 'custom-view-class'\n  }}\n  value=\"No. The honor is still mine.\"\n  onSave={this.onSave}\n/>`\n\nconst example8 = `<EdiText\n  type=\"text\"\n  hint=\"React is not a framework, it is a library.\"\n  viewProps={{\n    className: 'react-answer-1',\n    style: { borderRadius: 3 }\n  }}\n  value=\"I am not sure...\"\n  onSave={this.onSave}\n/>`\n\nconst example9 = `<EdiText\n  type=\"date\"\n  inputProps={{\n    min: \"2000-01-01\",\n    max: \"2049-01-01\"\n  }}\n  hint=\"All dates are allowed between 2000 and 2049\"\n  value={new Date().toDateString()}\n  onSave={this.onSave}\n/>`\n\nconst example10 = `<EdiText\n  type=\"text\"\n  hint={\n    <span className=\"custom-hint\">\n      <i>PhoneGap is a hybrid technology, not native.</i>\n    </span>\n  }\n  viewProps={{\n    className: 'react-answer-1',\n  }}\n  value=\"I am not sure...\"\n  onSave={this.onSave}\n/>`\n\nconst example11 = `<EdiText\n  type=\"text\"\n  saveButtonContent=\"Apply\"\n  cancelButtonContent=\"Cancel\"\n  saveButtonClassName=\"custom-save-button\"\n  editButtonClassName=\"custom-edit-button\"\n  cancelButtonClassName=\"custom-cancel-button\"\n  editButtonContent=\"Edit\"\n  value=\"Why, Mr. Anderson? Why? Why do you persist?\"\n  onSave={this.onSave}\n/>`\n\nconst example12 = `<EdiText\n  type=\"textarea\"\n  saveButtonContent=\"Apply\"\n  cancelButtonContent={<strong>Cancel</strong>}\n  editButtonContent=\"Edit\"\n  value=\"Why, Mr. Anderson? Why? Why do you persist?\"\n  onSave={this.onSave}\n  hideIcons={true}\n/>`\n\nconst example13 = `import React, { Component } from 'react'\nimport EdiText from 'react-editext'\n\nexport default class App extends Component {\n  onSave = val => {\n    console.log('Edited Value -> ', val)\n  }\n\n  render () {\n    return (\n      <EdiText\n        viewContainerClassName='my-custom-view-wrapper'\n        type='textarea'\n        inputProps={{\n          rows: 5\n        }}\n        saveButtonContent='Apply'\n        cancelButtonContent={<strong>Cancel</strong>}\n        editButtonContent='Edit This Quote'\n        value=\"How do you define real? If you're talking about what you can feel, what you can smell,\n        what you can taste and see, then real is simply electrical signals interpreted by your brain\"\n        onSave={this.onSave}\n      />\n    )\n  }\n}\n`\nconst example13Style = `\n.my-custom-view-wrapper {\n  display: flex;\n  flex-direction: column;\n}\n\n.my-custom-view-wrapper div:last-child {\n  /* Here we are styling the button container. */\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-top: 5px;\n}`\nconst example14 = `import React, { Component } from 'react'\nimport EdiText from 'react-editext'\n\nexport default class App extends Component {\n  onSave = val => {\n    console.log('Edited Value -> ', val)\n  }\n\n  render () {\n    return (\n      <EdiText\n        type='text'\n        buttonsAlign='before'\n        value='What is real? How do you define real?'\n        onSave={this.onSave}\n      />\n    )\n  }\n}\n`\nconst example15 = `import React, { Component } from 'react'\nimport EdiText from 'react-editext'\n\nexport default class App extends Component {\n  onSave = val => {\n    console.log('Edited Value -> ', val)\n  }\n\n  render () {\n    return (\n      <EdiText\n        type='text'\n        value='What is real? How do you define real?'\n        onSave={this.onSave}\n        editOnViewClick={true}\n      />\n    )\n  }\n}\n`\nconst example16 = `import React, { Component } from 'react'\nimport EdiText from 'react-editext'\n\nexport default class App extends Component {\n  onSave = val => {\n    console.log('Edited Value -> ', val)\n  }\n\n  render () {\n    return (\n      <div>\n        <button\n          className='button is-small is-warning'\n          onClick={() => {\n            this.setState({ editing: !this.state.editing })\n          }}>\n            Toggle Editing Mode\n        </button>\n        <EdiText\n          type='text'\n          value='What is real? How do you define real?'\n          onSave={this.onSave}\n          editing={this.state.editing}\n        />\n      </div>\n    )\n  }\n}\n`\nexport default class App extends Component {\n  state = { editing: false }\n\n  onSave = val => {\n    console.log('Edited Value -> ', val)\n  }\n\n  validationFailed = textValue => {\n    window.alert(\n      `The text <${textValue}> is not valid.\\nYou shall not use the word SMITH here!!!`\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <section className='hero is-warning'>\n          <div className='hero-body'>\n            <div className='container'>\n              <h1 className='title'>React EdiText</h1>\n              <h2 className='subtitle'>\n                Editable Text Component for React Applications\n              </h2>\n              <span style={{ marginRight: 5 }}>\n                <a\n                  className='github-button'\n                  href='https://github.com/alioguzhan/react-editext'\n                  data-size='large'\n                  data-show-count='true'\n                  aria-label='Star alioguzhan/react-editext on GitHub'\n                >\n                  Star\n                </a>\n              </span>\n              <span>\n                <a\n                  className='github-button'\n                  href='https://github.com/alioguzhan/react-editext/fork'\n                  data-size='large'\n                  data-show-count='true'\n                  aria-label='Fork alioguzhan/react-editext on GitHub'\n                >\n                  Fork\n                </a>\n              </span>\n            </div>\n          </div>\n        </section>\n        <div className='container'>\n          <div className='tile is-parent is-vertical is-12'>\n            <p>\n              <strong>EdiText</strong> is a React component that converts your\n              text into editable content. Below you can see some examples.\n            </p>\n            <p>\n              For installation and available props please see the\n              <a href='https://github.com/alioguzhan/react-editext'>\n                {' '}\n                repository page\n              </a>\n              .\n            </p>\n          </div>\n          <div className='tile is-parent is-vertical is-10' id='default-props'>\n            <div className='subtitle'>\n              <a href='#default-props'>Default Props</a>\n            </div>\n            <p className='content'>\n              This is the default usage without custom props.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example1}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='text'\n                  value='What is real? How do you define real?'\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='show-a-hint-message'\n          >\n            <div className='subtitle'>\n              <a href='#show-a-hint-message'>Show a Hint Message</a>\n            </div>\n            <p className='content'>\n              If you don't want to use another library and just want to show a\n              simple message as hint, use the <code>hint</code> prop.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example8}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <p>What is the main difference between React and Angular?</p>\n                <div className='custom-wrapper'>\n                  <EdiText\n                    type='text'\n                    hint='React is not a framework, it is a library.'\n                    viewProps={{\n                      className: 'react-answer-1'\n                    }}\n                    value='I am not sure...'\n                    onSave={this.onSave}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='custom-element-as-hint-message'\n          >\n            <div className='subtitle'>\n              <a href='#custom-element-as-hint-message'>\n                Custom Element as Hint Message\n              </a>\n            </div>\n            <p className='content'>\n              In fact, you can render any valid React Element in hint section.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example10}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <p>\n                  What is the difference between React Native and PhoneGap ?\n                </p>\n                <div className='custom-wrapper'>\n                  <EdiText\n                    type='text'\n                    hint={\n                      <span className='custom-hint'>\n                        <i>PhoneGap is a hybrid technology, not native.</i>\n                      </span>\n                    }\n                    viewProps={{\n                      className: 'react-answer-1'\n                    }}\n                    value='I am not sure...'\n                    onSave={this.onSave}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='textarea-for-editing-input'\n          >\n            <div className='subtitle'>\n              <a href='#textarea-for-editing-input'>\n                Textarea for Editing Input\n              </a>\n            </div>\n            <p className='content'>\n              You can use <code>{'<textarea>'}</code> for editing if your\n              content is too long. Also you can specify custom class name and\n              other props for the input element. Since this page has built with\n              Bulma.io, we passed <code>textarea</code>\n              as class name.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example2}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='textarea'\n                  inputProps={{\n                    className: 'textarea',\n                    placeholder: 'Type your content here',\n                    style: {\n                      outline: 'none',\n                      minWidth: 'auto'\n                    },\n                    rows: 5\n                  }}\n                  value=\"How do you define real? If you're talking about what you can feel, what you can smell,\n                  what you can taste and see, then real is simply electrical signals interpreted by your brain\"\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='custom-button-contents'\n          >\n            <div className='subtitle'>\n              <a href='#custom-button-contents'>Custom Button Contents</a>\n            </div>\n            <p className='content'>\n              By default, Action buttons have no titles. They are just some\n              simple icons. But you can append{' '}\n              <strong>any valid element</strong> next to those icons. See the\n              example below.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example3}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='text'\n                  saveButtonContent='Apply'\n                  cancelButtonContent={<strong>Cancel</strong>}\n                  editButtonContent='Edit'\n                  value='Why, Mr. Anderson? Why? Why do you persist?'\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='removing-default-icons'\n          >\n            <div className='subtitle'>\n              <a href='#removing-default-icons'>Removing Default Icons</a>\n            </div>\n            <p className='content'>\n              If you prefer to disable default icons, you can set{' '}\n              <code>hideIcons</code> prop to <code>true</code>. Don't forget to\n              set a content or title for your actions buttons. They will have\n              empty labels otherwise.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example12}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='text'\n                  saveButtonContent='Apply'\n                  cancelButtonContent={<strong>Cancel</strong>}\n                  editButtonContent='Edit'\n                  value='Why, Mr. Anderson? Why? Why do you persist?'\n                  hideIcons={true}\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='custom-classes-for-buttons'\n          >\n            <div className='subtitle'>\n              <a href='#custom-classes-for-buttons'>\n                Custom HTML Classes for Buttons\n              </a>\n            </div>\n            <p className='content'>\n              You can use your own classes for action buttons [Edit - Save -\n              Cancel]\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example11}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='text'\n                  saveButtonContent='Apply'\n                  cancelButtonContent='Cancel'\n                  saveButtonClassName='custom-save-button'\n                  editButtonClassName='custom-edit-button'\n                  cancelButtonClassName='custom-cancel-button'\n                  editButtonContent='Edit'\n                  value='Why, Mr. Anderson? Why? Why do you persist?'\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='custom-classes-for-containers'\n          >\n            <div className='subtitle'>\n              <a href='#custom-classes-for-containers'>\n                Custom HTML Classes for Containers\n              </a>\n            </div>\n            <p className='content'>\n              You can use your own classes for main, edit and view containers.\n            </p>\n            <p className='content'>\n              <code>viewContainerClassName</code> and{' '}\n              <code>editContainerClassName</code>\n              have usually same styles. It is provided to assign different class\n              names for both. Yet you can omit one of them if you specify other\n              one. In that case, the specified class name will be applied to\n              both props.\n            </p>\n            <p className='content'>\n              There is also <code>mainContainerClassName</code> prop which\n              allows you to apply top-level styles to the EdiText component. But\n              you probably don't need this.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example13}\n                </SyntaxHighlighter>\n                <p>With some style:</p>\n                <SyntaxHighlighter language='css'>\n                  {example13Style}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  viewContainerClassName='my-custom-view-wrapper'\n                  type='textarea'\n                  inputProps={{\n                    rows: 5\n                  }}\n                  saveButtonContent='Apply'\n                  cancelButtonContent={<strong>Cancel</strong>}\n                  editButtonContent='Edit This Quote'\n                  value=\"How do you define real? If you're talking about what you can feel, what you can smell,\n                  what you can taste and see, then real is simply electrical signals interpreted by your brain\"\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='custom-props-for-input-element'\n          >\n            <div className='subtitle'>\n              <a href='#custom-props-for-input-element'>\n                Custom Props for Input Element\n              </a>\n            </div>\n            <p className='content'>\n              It is likely that you will want to add some props to input\n              element. You can pass any valid HTML attribute to the input\n              element via <code>inputProps</code>.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example7}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <p>\n                  What was the Morpheus' answer when Neo say 'It was an honor,\n                  sir' ?\n                </p>\n                <div className='custom-wrapper'>\n                  <EdiText\n                    type='text'\n                    hint='It is from Matrix Revolutions.'\n                    inputProps={{\n                      placeholder: 'Type your answer here',\n                      style: {\n                        backgroundColor: '#233C51',\n                        color: '#E6ECF1',\n                        fontWeight: 500,\n                        width: 250\n                      },\n                      name: 'answer1'\n                    }}\n                    viewProps={{\n                      className: 'custom-view-class'\n                    }}\n                    value='No. The honor is still mine.'\n                    onSave={this.onSave}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='custom-props-for-text-element'\n          >\n            <div className='subtitle'>\n              <a href='#custom-props-for-text-element'>\n                Custom Props for Text Element\n              </a>\n            </div>\n            <p className='content'>\n              You may want to add some styling to your text content instead of\n              render it as a plain text. To do that you can use\n              <code>viewProps</code> prop. You can pass any valid HTML\n              attribute. These props will be passed to content <code>div</code>.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example6}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='text'\n                  viewProps={{\n                    className: 'my-react-header',\n                    style: { borderRadius: 3 }\n                  }}\n                  value='Hello React!'\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='change-buttons-location'\n          >\n            <div className='subtitle'>\n              <a href='#change-buttons-location'>\n                Change the location of action buttons\n              </a>\n            </div>\n            <p className='content'>\n              You may want locate action buttons before the input element\n              instead of after it. Just pass the{' '}\n              <code>buttonsAlign='before'</code> prop. You should be fine.\n              Default value is already `after`. So don't pass anything if you\n              don't want to change this.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example14}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='text'\n                  buttonsAlign='before'\n                  value='What is real? How do you define real?'\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div className='tile is-parent is-vertical is-10' id='validation'>\n            <div className='subtitle'>\n              <a href='#validation'>Validate the Content</a>\n            </div>\n            <p className='content'>\n              You can validate the value of input before save. Just pass a\n              function to <code>validation</code> prop. And you also can set a\n              validation message which will appear when validation fails. See\n              the example. Delete some characters from content and try to save\n              it.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example4}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='text'\n                  validationMessage='Please type at least 20 characters.'\n                  validation={val => val.length >= 20}\n                  value='The Matrix has you..'\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='custom-validation'\n          >\n            <div className='subtitle'>\n              <a href='#custom-validation'>Custom Validation</a>\n            </div>\n            <p className='content'>\n              EdiText has a very basic validation handling. You will probably\n              want to use an external library to show custom and fancy\n              validation warnings or messages. You can track the validity of\n              input value with\n              <code>onValidationFail</code> prop. Just pass your method to\n              listen and react against validation updates.\n              <strong>\n                Type the word 'Smith' into below input and try to save it.\n              </strong>\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example5}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='text'\n                  validation={val => val.toLowerCase().indexOf('smith') < 0}\n                  onValidationFail={this.validationFailed}\n                  inputProps={{\n                    placeholder: \"Don't use the word 'Smith'...\"\n                  }}\n                  value='Why Mr. Anderson? Why? Why? Why?'\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div\n            className='tile is-parent is-vertical is-10'\n            id='usage-for-date-values'\n          >\n            <div className='subtitle'>\n              <a href='#usage-for-date-values'>Usage for Date Values</a>\n            </div>\n            <p className='content'>\n              You can use EdiText for date inputs as well. Just type{' '}\n              <code>date</code> to type prop. Other related and types are{' '}\n              <code>datetime-local</code>, <code>time</code>, <code>week</code>,{' '}\n              <code>month</code>\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example9}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='date'\n                  inputProps={{\n                    min: '2000-01-01',\n                    max: '2049-01-01'\n                  }}\n                  hint='All dates are allowed between 2000 and 2049'\n                  value={new Date().toLocaleString()}\n                  onSave={this.onSave}\n                />\n              </div>\n            </div>\n          </div>\n          <div className='tile is-parent is-vertical is-10' id='edit-on-view-click'>\n            <div className='subtitle'>\n              <a href='#default-props'>Edit on View Click</a>\n            </div>\n            <p className='content'>\n              You may want to activate the editor when the view is clicked on\n              instead of clicking on the edit button. To do that you can use\n              <code>editOnViewClick</code> prop to <code>true</code>.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example15}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <EdiText\n                  type='text'\n                  value='What is real? How do you define real?'\n                  onSave={this.onSave}\n                  editOnViewClick={true}\n                />\n              </div>\n            </div>\n          </div>\n          <div className='tile is-parent is-vertical is-10' id='edit-by-default'>\n            <div className='subtitle'>\n              <a href='#default-props'>Controlled Edit View</a>\n            </div>\n            <p className='content'>\n              You may want the editor to be active by default and/or be controlled externally.\n              To do that you can set <code>editing</code> prop to <code>true</code>.\n            </p>\n            <div className='columns'>\n              <div className='column is-half'>\n                <SyntaxHighlighter language='javascript'>\n                  {example16}\n                </SyntaxHighlighter>\n              </div>\n              <div className='column'>\n                <div className='subtitle'>Output</div>\n                <div>\n                  <button\n                    className='button is-small is-warning'\n                    onClick={() => this.setState({ editing: !this.state.editing })}>\n                      Toggle Editing Mode\n                  </button>\n                </div>\n                <br />\n                <EdiText\n                  type='text'\n                  value='What is real? How do you define real?'\n                  onSave={this.onSave}\n                  editing={this.state.editing}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <footer className='footer' style={{ padding: 20 }}>\n          <div className='content has-text-centered'>\n            <p>\n              <strong>React EdiText</strong> by{' '}\n              <a href='https://github.com/alioguzhan'>Ali Oguzhan Yildiz</a>.\n              The source code is licensed\n              <a href='https://opensource.org/licenses/MIT'> MIT</a>.\n            </p>\n          </div>\n        </footer>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}